syntax = "proto2";
package hw.trezor.messages.ava;

// Sugar for easier handling in Java
option java_package = "com.satoshilabs.trezor.lib.protobuf";
option java_outer_classname = "TrezorMessageAva";

import "messages-common.proto";

/**
 * Request: Ask device for address corresponding to address_n path
 * @start
 * @next Address
 * @next Failure
 */
message GetAVAAddress {
    repeated uint32 address_n = 1;                                      // BIP-32 path to derive the key from master node
}

/**
 * Response: Contains address derived from device private seed
 * @end
 */
message AVAAddress {
    required string address = 1;    // Coin address in Base58 encoding
}


/**
 * Request: Ask device to sign transaction
 * @start
 * @next TxRequest
 * @next Failure
 */
message AVASignTx {
    required uint32 network = 1;
    required bytes blockchain_id = 2;
    required bytes asset = 3;
    repeated uint32 address_n = 4;
    repeated AVAOutput outputs = 5;
    repeated AVAInput inputs = 6;

    message AVAOutput {
        required bytes asset = 1;
        required uint32 fxid = 2;
        required uint64 amount = 3;
        required uint64 locktime = 4;
        required uint32 threshold = 5;
        required string address = 6;
    }

    message AVAInput {
        required bytes txid = 1;
        required uint32 index = 2;
        required bytes asset = 3;
        required uint32 fxid = 4;
        required uint64 amount = 5;
    }

}

/**
 * Response: Signed message
 * @end
 */
message AVASignedTx {
    required bytes tx = 1;   // signed tx
}
