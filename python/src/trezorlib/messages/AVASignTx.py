# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

from .AVAInput import AVAInput
from .AVAOutput import AVAOutput

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class AVASignTx(p.MessageType):
    MESSAGE_WIRE_TYPE = 903

    def __init__(
        self,
        network: int = None,
        blockchain_id: bytes = None,
        outputs: List[AVAOutput] = None,
        inputs: List[AVAInput] = None,
    ) -> None:
        self.network = network
        self.blockchain_id = blockchain_id
        self.outputs = outputs if outputs is not None else []
        self.inputs = inputs if inputs is not None else []

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('network', p.UVarintType, 0),  # required
            2: ('blockchain_id', p.BytesType, 0),  # required
            3: ('outputs', AVAOutput, p.FLAG_REPEATED),
            4: ('inputs', AVAInput, p.FLAG_REPEATED),
        }
