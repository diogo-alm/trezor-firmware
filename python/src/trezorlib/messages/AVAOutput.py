# Automatically generated by pb2py
# fmt: off
from .. import protobuf as p

if __debug__:
    try:
        from typing import Dict, List  # noqa: F401
        from typing_extensions import Literal  # noqa: F401
    except ImportError:
        pass


class AVAOutput(p.MessageType):

    def __init__(
        self,
        asset: bytes = None,
        amount: int = None,
        locktime: int = None,
        threshold: int = None,
        address: str = None,
    ) -> None:
        self.asset = asset
        self.amount = amount
        self.locktime = locktime
        self.threshold = threshold
        self.address = address

    @classmethod
    def get_fields(cls) -> Dict:
        return {
            1: ('asset', p.BytesType, 0),  # required
            2: ('amount', p.UVarintType, 0),  # required
            3: ('locktime', p.UVarintType, 0),  # required
            4: ('threshold', p.UVarintType, 0),  # required
            5: ('address', p.UnicodeType, 0),  # required
        }
